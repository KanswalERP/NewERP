@model NtierMvc.Model.GateEntryEntity

@{
    ViewBag.Title = "Inbound";
}

<div ng-controller="ModalController" class="row">
    <form id="formInbound">
        <div class="col-md-12">
            @Html.HiddenFor(m => m.Id)
            @*<div class="row mb-2">
                <div class="col-md-12" style="background-color: lightblue;">
                    <h4 class="control-label mt-2" style="margin-left:10px; font-size: 22px">Material Entry</h4>
                </div>
            </div>*@
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Type <span class="required">*</span>
                        </label>
                        @Html.DropDownListFor(m => m.Type, new SelectList(@ViewBag.ListType, "DataStringValueField", "DataTextField", Model.Type),
                           new
                           {
                               @class = "form-control requiredValidation clearField applyDisabled",
                               @id = "Type",
                               @data_inneraction = "validationCall",
                               @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)",
                               @onchange = "changeEndUseNo()"
                           })
                        <span class="HideValidMsg"> Select End Use</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label ">
                            Vendor Nature <span class="required">*</span>
                        </label>
                        @Html.DropDownListFor(m => m.VendorNatureId, new SelectList(ViewBag.ListVendorNature, "DataStringValueField", "DataTextField", Model.VendorNatureId), new
                            {
                                @class = "form-control requiredValidation clearField applyDisabled",
                                @id = "VendorNatureId",
                                @data_inneraction = "validationCall",
                                @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)",
                                @onchange = "getVendorIDs()"
                            })
                        <span class="HideValidMsg"> Please Select Vendor Nature</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label ">
                            Vendor Id <span class="required">*</span>
                        </label>
                        @Html.DropDownListFor(m => m.VendorId, new SelectList(ViewBag.ListVendorId, "DataStringValueField", "DataTextField", Model.VendorId), new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "VendorId",
                       @data_inneraction = "validationCall",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)",
                       @onchange = "getVendorDetails()"
                   })
                        <span class="HideValidMsg"> Please Select Vendor Id</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Vendor Name <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.VendorName, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id= "VendorName",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)",
                       @readonly = "true",
                       @placeholder = "Select VendorId"
                   })
                        <span class="HideValidMsg">Please Enter VendorId</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group text-left">
                        <label class="control-label ">
                            City <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.City, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id= "City",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)",
                       @readonly = "true",
                       @placeholder = "Select VendorId"
                   })
                        <span class="HideValidMsg">Please Enter City</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            End Use <span class="required">*</span>
                        </label>
                        @Html.DropDownListFor(m => m.EndUse, new SelectList(@ViewBag.ListEndUse, "DataStringValueField", "DataTextField", Model.EndUse),
                           new
                           {
                               @class = "form-control requiredValidation clearField applyDisabled",
                               @id = "EndUse",
                               @data_inneraction = "validationCall",
                               @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)",
                               @onchange = "changeEndUseNo()"
                           })
                        <span class="HideValidMsg">Select End Use</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            End Use No <span class="required">*</span>
                        </label>
                        @Html.DropDownListFor(m => m.EndUseNo, new SelectList(@ViewBag.ListEndUseNo, "DataStringValueField", "DataTextField", Model.EndUseNo),
                           new
                           {
                               @class = "form-control requiredValidation clearField applyDisabled",
                               @id = "EndUseNo",
                               @readonly = "true"
                           })
                        <span class="HideValidMsg"> Select End Use No</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Functional Area <span class="required">*</span>
                        </label>
                        @Html.DropDownListFor(m => m.FunctionalAreaId, new SelectList(@ViewBag.ListDepartment, "DataStringValueField", "DataTextField", Model.FunctionalAreaId),
                           new
                           {
                               @class = "form-control requiredValidation clearField applyDisabled",
                               @id = "FunctionalAreaId",
                               @data_inneraction = "validationCall",
                               @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                           })
                        <span class="HideValidMsg"> Select Functional Area</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            VendorPO NO <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.VendorPONO, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "VendorPONO",
                       @placeholder = "Enter VendorPONO"
                   })
                        <span class="HideValidMsg"> Select Vendor PONO</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            VendorPO Date <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.VendorPODate, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled NoEndDate",
                       autocomplete = "off",
                       @id = "VendorPODate",
                       @placeholder = "dd/MM/yyyy",
                       @style = "disabled :disabled",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg"> Select VendorPO Date</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Supply Type <span class="required">*</span>
                        </label>
                        @Html.DropDownListFor(m => m.SupplyType, new SelectList(@ViewBag.ListSupplyType, "DataStringValueField", "DataTextField", Model.SupplyType),
                           new
                           {
                               @class = "form-control requiredValidation clearField applyDisabled",
                               @id = "SupplyType"
                           })
                        <span class="HideValidMsg"> Select SupplyType</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Bill No <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.BillNo, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "BillNo",
                       @placeholder = "Enter Bill No",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg">Enter Bill No</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Bill Date <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.BillDate, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled NoEndDate",
                       autocomplete = "off",
                       @id = "BillDate",
                       @placeholder = "dd/MM/yyyy",
                       @style = "disabled :disabled",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg"> Select Bill Date</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Currency <span class="required">*</span>
                        </label>
                        @Html.DropDownListFor(m => m.Currency, new SelectList(ViewBag.ListCurrency, "DataStringValueField", "DataTextField", Model.Currency), new
                           {
                               @class = "form-control requiredValidation clearField applyDisabled",
                               @id = "Currency",
                               @data_inneraction = "validationCall",
                               @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                           })
                        <span class="HideValidMsg"> Select Currency</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Bill Amount <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.BillAmount, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled requiredValidation",
                       @id = "BillAmount",
                       @placeholder = "Enter Bill Amount",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)",
                           @onkeypress = "return AllowNumbers(event); "
                   })
                        <span class="HideValidMsg">Enter Bill Amount</span>
                    </div>
                </div>

                @*<div class="col-md-2">
                <div class="form-group">
                    <label class="control-label">
                        Unit Rate <span class="required">*</span>
                    </label>
                    @Html.TextBoxFor(m => m.UnitRate, new
               {
                   @class = "form-control requiredValidation clearField applyDisabled",
                   @id = "UnitRate",
                   @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)",
                   @onkeypress = "return AllowNumbers(event); ",
               })
                    <span class="HideValidMsg"> Select Unit Rate</span>
                </div>
            </div>*@
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Vehicle No. <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.VehicleNo, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "VehicleNo",
                       @placeholder = "Enter Vehicle No",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg"> Enter Vehicle No</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Driver Name <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.DriverName, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "DriverName",
                       @placeholder = "Enter Driver Name",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg">Enter Driver Name</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Driver Contact No <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.DriverContactNo, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "DriverContactNo",
                       @placeholder = "Enter Driver Contact No",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg">Enter Driver Contact No</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Time In <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.TimeIn, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "TimeIn",
                       @placeholder = "Enter Time In",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg">Enter Time In</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Time Out <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.TimeOut, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "TimeOut",
                       @placeholder = "Enter Time Out",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg">Enter Time Out</span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">
                            Vehicle Released <span class="required">*</span>
                        </label>
                        @Html.TextBoxFor(m => m.VehicleReleased, new
                   {
                       @class = "form-control requiredValidation clearField applyDisabled",
                       @id = "VehicleReleased",
                       @placeholder = "Enter Vehicle Released",
                       @onfocusout = "return ValidateRequiredFieldsOnFocusOut(this)"
                   })
                        <span class="HideValidMsg">Enter Vehicle Released</span>
                    </div>
                </div>
                <div class="col-md-12">
                    <table class="table table-bordered table-sm table-striped text-center">
                        <thead>
                            <tr>
                                <td>SN</td>
                                <td>Qty</td>
                                <td>ItemDesc</td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>            
            <div class="row">
                <div class="col-md-12 pt-4 text-center">
                    <button style="font-size:18px" type="button" class="btn btn-success btn-sm" id="save_results" ng-click="SaveInboundDetails()">Save</button>
                    <button style="font-size:18px" type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </form>
</div>
<script>
    $(document).ready(function () {
        window.SaveGateEntry = '@Url.Action("SaveGateEntry", "GateEntry")';
        window.GetVendorIds = '@Url.Action("GetVendorIds", "GateEntry")';
        window.GetVendorDetails = '@Url.Action("GetVendorDetails", "GateEntry")';
        window.ChangeEndUseNo = '@Url.Action("ChangeEndUseNo", "GateEntry")';


        $('#divQuoteDetails').hide();
    });

    $('.NoEndDate').datepicker({
        format: 'dd/mm/yyyy',
        autoclose: true,
        changeMonth: true,
        changeYear: true,
        endDate: '',
    });
    $('.CurrentEndDate').datepicker({

        format: 'dd/mm/yyyy',
        autoclose: true,
        changeMonth: true,
        changeYear: true,
        endDate: 'today',
    });
</script>